/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R  &kp T            &kp Y      &kp U  &kp I      &kp O    &kp P     &kp ENTER
&kp ESCAPE  &kp A  &kp S  &kp D     &kp F  &kp G            &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LSHFT   &kp Z  &kp X  &kp C     &kp V  &kp B            &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_CONTROL
                          &kp LGUI  &mo 1  &kp BACKSPACE    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp N1        &kp N2        &kp N3    &kp N4          &kp N5             &kp N6            &kp N7             &kp N8        &kp N9        &kp N0         &kp PIPE
&kp LCTRL  &kp EXCL      &kp AT_SIGN   &kp HASH  &kp DOLLAR      &kp PERCENT        &kp LS(CARET)     &kp AMPS           &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)   &kp PIPE
&kp LSHFT  &kp KP_EQUAL  &kp KP_MINUS  &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMI      &kp COLON     &kp BACKSLASH  &kp TILDE
                                       &kp LGUI  &trans          &kp SPACE          &kp RET           &trans             &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6    &kp F7    &kp F8    &kp F9     &kp F10  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans   &kp F11
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans   &kp F12
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &kp LA(LC(E))  &trans  &trans           &trans                  &trans            &trans                &trans             &trans  &trans
&trans  &trans  &trans  &trans         &trans  &kp LA(LC(G))    &kp LA(LC(LEFT_ARROW))  &kp LA(LC(DOWN))  &kp LA(LC(UP_ARROW))  &kp LA(LC(RIGHT))  &trans  &kp LA(LC(ENTER))
&trans  &trans  &trans  &trans         &trans  &trans           &trans                  &trans            &trans                &trans             &trans  &trans
                        &trans         &trans  &trans           &trans                  &trans            &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        SuperLayer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
